typedef pam_ret = enum(SUCCESS=0,OPEN_ERR=1,SYMBOL_ERR=2,SERVICE_ERR=3,SYSTEM_ERR=4,BUF_ERR=5,PERM_DENIED=6,AUTH_ERR=7,CRED_INSUFFICIENT=8,AUTHINFO_UNAVAIL=9,USER_UNKNOWN=10,MAXTRIES=11,NEW_AUTHTOK_REQD=12,ACCT_EXPIRED=13,SESSION_ERR=14,CRED_UNAVAIL=15,CRED_EXPIRED=16,CRED_ERR=17,NO_MODULE_DATA=18,CONV_ERR=19,AUTHTOK_ERR=20,AUTHTOK_RECOVERY_ERR=21,AUTHTOK_LOCK_BUSY=22,AUTHTOK_DISABLE_AGING=23,TRY_AGAIN=24,IGNORE=25,ABORT=26,AUTHTOK_EXPIRED=27,MODULE_UNKNOWN=28,BAD_ITEM=29,CONV_AGAIN=30,INCOMPLETE=31)
typedef pam_type = enum(SERVICE=1,USER=2,TTY=3,RHOST=4,CONV=5,PASS=6,OLDPASS=7,RUSER=8,PROMPT=9,DELAY=10,DISPLAY=11,XAUTH=12,TOK_TYPE=13)
typedef pwd = struct(string,string,int,int,string,string,string)
typedef spwd = struct(string,string,long,long,long,long,long,long,uint)
pam_ret pam_start(string, string, addr, addr)
pam_ret pam_authenticate(addr, int)
pam_ret pam_setcred(addr, int)
pam_ret pam_acct_mgmt(addr, int)
pam_ret pam_open_session(addr, int)
pam_ret pam_close_session(addr, int)
pam_ret pam_putenv(addr, string)
pam_ret pam_get_user(addr, +string*, string)
pam_ret pam_sm_authenticate(addr, int , int , array(string,arg3))
pam_ret pam_sm_acct_mgmt(addr, int , int , array(string,arg3))
pam_ret pam_sm_setcred(addr, int , int , array(string,arg3))
pam_ret pam_sm_open_session(addr, int , int , array(string,arg3))
pam_ret pam_sm_close_session(addr, int , int , array(string,arg3))
string  pam_getenv(addr, string)
string* pam_getenvlist(addr)
pam_ret pam_set_data(addr, string, +string,addr)
pam_ret pam_get_data(addr, string, +string*)
pam_ret pam_get_authtok(addr, pam_type, +string*, string)
pam_ret pam_fail_delay(addr, uint)
pwd pam_modutil_getpwnam(addr, string)
spwd pam_modutil_getspnam(addr, string)
string pam_modutil_getlogin(addr)
int pam_modutil_read(int, +string(array(char,arg3)), int)
pam_ret pam_get_item(addr, pam_type, +string*)
pam_ret pam_set_item(addr, pam_type, string)
void pam_syslog(addr,int, string, format)
void pam_vsyslog(addr,int, string, hide(addr))
pam_ret pam_prompt(addr, int, +string*, string, string)
pam_ret pam_vprompt(addr, int, +string*, string, string)
string pam_strerror(addr, int)
pam_ret pam_end(addr, int)

